const v="modulepreload",g=function(e){return window.__sw__.assetPath+"/bundles/swagbasicexampletheme/administration/"+e},r={},w=function(o,s,C){let m=Promise.resolve();if(s&&s.length>0){document.getElementsByTagName("link");const t=document.querySelector("meta[property=csp-nonce]"),n=(t==null?void 0:t.nonce)||(t==null?void 0:t.getAttribute("nonce"));m=Promise.allSettled(s.map(l=>{if(l=g(l),l in r)return;r[l]=!0;const a=l.endsWith(".css"),d=a?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${l}"]${d}`))return;const i=document.createElement("link");if(i.rel=a?"stylesheet":v,a||(i.as="script"),i.crossOrigin="",i.href=l,n&&i.setAttribute("nonce",n),document.head.appendChild(i),a)return new Promise((u,p)=>{i.addEventListener("load",u),i.addEventListener("error",()=>p(new Error(`Unable to preload CSS for ${l}`)))})}))}function c(t){const n=new Event("vite:preloadError",{cancelable:!0});if(n.payload=t,window.dispatchEvent(n),!n.defaultPrevented)throw t}return m.then(t=>{for(const n of t||[])n.status==="rejected"&&c(n.reason);return o().catch(c)})};Shopware.Component.override("sw-cms-sidebar",()=>w(()=>import("./index-CLWuJBca.js"),[]));const b='{% block sw_cms_el_component_custom_banner_slider %} <div class="sw-cms-el-component-custom-banner-slider"> custom-banner-slider </div> {% endblock %}',{Component:f,Mixin:_}=Shopware;f.register("sw-cms-el-component-custom-banner-slider",{template:b,mixins:[_.getByName("cms-element")],created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("custom-banner-slider"),this.initElementData("custom-banner-slider")}}});const h=`{% block sw_cms_element_custom_banner_slider_config %} <div class="sw-cms-el-config-custom-banner-slider"> {% block sw_cms_element_custom_banner_slider_config_tabs %} <sw-tabs class="sw-cms-el-config-custom-banner-slider__tabs" defaultItem="content"> <template #default="{ active }"> {% block sw_cms_element_custom_banner_slider_config_tab_content %} <sw-tabs-item :title="$tc('sw-cms.elements.general.config.tab.content')" name="content" :active-tab="active" > {{ $tc('sw-cms.elements.general.config.tab.content') }} </sw-tabs-item> {% endblock %} {% block sw_cms_element_custom_banner_slider_config_tab_options %} <sw-tabs-item :title="$tc('sw-cms.elements.general.config.tab.settings')" name="settings" :active-tab="active" > {{ $tc('sw-cms.elements.general.config.tab.settings') }} </sw-tabs-item> {% endblock %} </template> <template #content="{ active }"> {% block sw_cms_element_custom_banner_slider_config_content %} <sw-container v-if="active === 'content'" class="sw-cms-el-config-custom-banner-slider__tab-content" > <template v-for="(item, index) in element.config.slides.value"> <h3>Slide {{ index+1 }} <sw-button name="default-basic-x-line" color="#3498db" @click="removeElement(index)">- </sw-button> </h3> <sw-cms-mapping-field v-model:config="element.config.media" :label="$tc('sw-cms.elements.image.label')" value-types="entity" entity="media" > <sw-media-upload-v2 variant="regular" :upload-tag="uploadTag(index)" :source="previewSource(index)" :allow-multi-select="false" :default-folder="cmsPageState.pageEntityName" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" @media-upload-sidebar-open="onOpenMediaModal(index)" @media-upload-remove-image="onImageRemove(index)" /> <template #preview="{ demoValue }"> <div class="sw-cms-el-config-image__mapping-preview"> <img v-if="demoValue.url" :src="demoValue.url" alt="" > <sw-alert v-else class="sw-cms-el-config-image__preview-info" variant="info" > {{ $tc('sw-cms.detail.label.mappingEmptyPreview') }} </sw-alert> </div> </template> </sw-cms-mapping-field> <sw-upload-listener :upload-tag="uploadTag(index)" auto-upload @media-upload-finish="onImageUploadFinish($event, index)"> </sw-upload-listener> <sw-text-field v-model:value="item.title.value" label="Title" placeholder="Title" /> <sw-text-field v-model:value="item.text.value" label="Text" placeholder="Text" /> <mt-switch v-model="item.activeBtn.value" :label="$tc('sw-cms.elements.custom-banner-slider.show-btn')" /> <sw-url-field v-if="item.activeBtn.value" v-model:value="item.link.value" label="Link" placeholder="Link" @update:value="updateCurrentValue" > </sw-url-field> <sw-text-field v-if="item.activeBtn.value" v-model:value="item.nameBtn.value" label="Name Button" placeholder="Name Button" /> </template> <sw-button name="default-basic-plus-line" color="#3498db" @click="addNewElement">+ </sw-button> </sw-container> {% endblock %} {% block sw_cms_element_custom_banner_slider_config_settings %} <sw-container v-if="active === 'settings'" class="sw-cms-el-config-custom-banner-slider__tab-settings" > Just for example </sw-container> {% endblock %} <sw-media-modal-v2 v-if="mediaModalIsOpen" variant="full" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" :entity-context="cmsPageState.entityName" :allow-multi-select="false" :initial-folder-id="cmsPageState.defaultMediaFolderId" @media-upload-remove-image="onImageRemove" @media-modal-selection-change="onSelectionChanges" @modal-close="onCloseModal" /> </template> </sw-tabs> {% endblock %} </div> {% endblock %}`,{Component:x,Mixin:y}=Shopware;x.register("sw-cms-el-config-custom-banner-slider",{template:h,inject:["repositoryFactory","mediaService"],mixins:[y.getByName("cms-element")],data(){return{mediaModalIsOpen:!1,initialFolderId:null,openedMediaModalIndex:null}},created(){this.createdComponent()},computed:{mediaRepository(){return this.repositoryFactory.create("media")}},methods:{createdComponent(){this.initElementConfig("custom-banner-slider")},uploadTag(e){return`cms-element-media-config-${this.element.id}-${e}`},fileAccept(){return"image/*"},addNewElement(){this.element.config.slides.value.push(this.getEmptyElement())},removeElement(e){this.element.config.slides.value.splice(e,1)},getEmptyElement(){return{image:{source:"static",value:null,entity:{name:"media"}},title:{source:"static",value:""},text:{source:"static",value:""},activeBtn:{source:"static",value:!1},link:{source:"static",value:null},nameBtn:{source:"static",value:""}}},onImageRemove(e){this.element.config.slides.value[e].image.value=null,this.$emit("element-update",this.element)},onSelectionChanges(e){this.element.config.slides.value[this.openedMediaModalIndex].image.value=e[0],this.$emit("element-update",this.element)},onCloseModal(){this.mediaModalIsOpen=!1,this.openedMediaModalIndex=null},async onImageUploadFinish({targetId:e},o){const s=await this.mediaRepository.get(e,Shopware.Context.api);this.element.config.slides.value[o].image.value=s,this.$emit("element-update",this.element)},previewSource(e){return this.element.config.slides.value[e].image!==null&&this.element.config.slides.value[e].image.value!==null?this.element.config.slides.value[e].image.value.id:null},onOpenMediaModal(e){this.mediaModalIsOpen=!0,this.openedMediaModalIndex=e}}});const k='{% block sw_cms_element_custom_banner_slider_preview %} <div class="sw-cms-el-preview-custom-banner-slider"> custom-banner-slider </div> {% endblock %}',{Component:E}=Shopware;E.register("sw-cms-el-preview-custom-banner-slider",{template:k});Shopware.Service("cmsService").registerCmsElement({name:"custom-banner-slider",label:"sw-cms.elements.custom-banner-slider.label",component:"sw-cms-el-component-custom-banner-slider",configComponent:"sw-cms-el-config-custom-banner-slider",previewComponent:"sw-cms-el-preview-custom-banner-slider",defaultConfig:{slides:{source:"static",value:[]}},defaultData:{}});
//# sourceMappingURL=swag-basic-example-theme-BOyZ_zhn.js.map
