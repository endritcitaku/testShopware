{"version":3,"mappings":"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","names":["__vitePreload","template$4","Component","Mixin","template","template$3","index","mediaEntity","targetId","template$2","template$1"],"ignoreList":[],"sources":["../../../app/administration/src/module/sw-cms/component/index.js","../../../app/administration/src/module/sw-cms/elements/custom-banner-slider/component/sw-cms-el-component-custom-banner-slider.html.twig","../../../app/administration/src/module/sw-cms/elements/custom-banner-slider/component/index.js","../../../app/administration/src/module/sw-cms/elements/custom-banner-slider/config/sw-cms-el-config-custom-banner-slider.html.twig","../../../app/administration/src/module/sw-cms/elements/custom-banner-slider/config/index.js","../../../app/administration/src/module/sw-cms/elements/custom-banner-slider/preview/sw-cms-el-preview-custom-banner-slider.html.twig","../../../app/administration/src/module/sw-cms/elements/custom-banner-slider/preview/index.js","../../../app/administration/src/module/sw-cms/elements/custom-banner-slider/index.js","../../../app/administration/src/module/sw-cms/blocks/custom-option/custom-banner-slider/component/sw-cms-block-custom-banner-slider.html.twig","../../../app/administration/src/module/sw-cms/blocks/custom-option/custom-banner-slider/component/index.js","../../../app/administration/src/module/sw-cms/blocks/custom-option/custom-banner-slider/preview/sw-cms-preview-custom-banner-slider.html.twig","../../../app/administration/src/module/sw-cms/blocks/custom-option/custom-banner-slider/preview/index.js","../../../app/administration/src/module/sw-cms/blocks/custom-option/custom-banner-slider/index.js"],"sourcesContent":["/*\n * @sw-package discovery\n */\nShopware.Component.override('sw-cms-sidebar', () => import('./sw-cms-sidebar'));","{% block sw_cms_el_component_custom_banner_slider %}\n    <div class=\"sw-cms-el-component-custom-banner-slider\">\n        custom-banner-slider\n    </div>\n{% endblock %}","import template from './sw-cms-el-component-custom-banner-slider.html.twig';\nimport './sw-cms-el-component-custom-banner-slider.scss';\n\nconst {Component, Mixin} = Shopware;\n\nComponent.register('sw-cms-el-component-custom-banner-slider', {\n    template,\n\n    mixins: [\n        Mixin.getByName('cms-element')\n    ],\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.initElementConfig('custom-banner-slider');\n            this.initElementData('custom-banner-slider');\n        },\n    },\n});","{% block sw_cms_element_custom_banner_slider_config %}\n    <div class=\"sw-cms-el-config-custom-banner-slider\">\n        {% block sw_cms_element_custom_banner_slider_config_tabs %}\n            <sw-tabs class=\"sw-cms-el-config-custom-banner-slider__tabs\" defaultItem=\"content\">\n                <template #default=\"{ active }\">\n                    {% block sw_cms_element_custom_banner_slider_config_tab_content %}\n                        <sw-tabs-item\n                                :title=\"$tc('sw-cms.elements.general.config.tab.content')\"\n                                name=\"content\"\n                                :active-tab=\"active\"\n                        >\n                            {{ $tc('sw-cms.elements.general.config.tab.content') }}\n                        </sw-tabs-item>\n                    {% endblock %}\n                    {% block sw_cms_element_custom_banner_slider_config_tab_options %}\n                        <sw-tabs-item\n                                :title=\"$tc('sw-cms.elements.general.config.tab.settings')\"\n                                name=\"settings\"\n                                :active-tab=\"active\"\n                        >\n                            {{ $tc('sw-cms.elements.general.config.tab.settings') }}\n                        </sw-tabs-item>\n                    {% endblock %}\n                </template>\n\n                <template #content=\"{ active }\">\n                    {% block sw_cms_element_custom_banner_slider_config_content %}\n                        <sw-container\n                                v-if=\"active === 'content'\"\n                                class=\"sw-cms-el-config-custom-banner-slider__tab-content\"\n                        >\n\n                            <template v-for=\"(item, index) in element.config.slides.value\">\n                                <h3>Slide {{ index+1 }}\n                                    <sw-button name=\"default-basic-x-line\" color=\"#3498db\"\n                                               @click=\"removeElement(index)\">-\n                                    </sw-button>\n                                </h3>\n                                <sw-cms-mapping-field\n                                        v-model:config=\"element.config.media\"\n                                        :label=\"$tc('sw-cms.elements.image.label')\"\n                                        value-types=\"entity\"\n                                        entity=\"media\"\n                                >\n                                    <sw-media-upload-v2\n                                            variant=\"regular\"\n                                            :upload-tag=\"uploadTag(index)\"\n                                            :source=\"previewSource(index)\"\n                                            :allow-multi-select=\"false\"\n                                            :default-folder=\"cmsPageState.pageEntityName\"\n                                            :caption=\"$tc('sw-cms.elements.general.config.caption.mediaUpload')\"\n                                            @media-upload-sidebar-open=\"onOpenMediaModal(index)\"\n                                            @media-upload-remove-image=\"onImageRemove(index)\"\n                                    />\n\n                                    <template #preview=\"{ demoValue }\">\n                                        <div class=\"sw-cms-el-config-image__mapping-preview\">\n                                            <img\n                                                    v-if=\"demoValue.url\"\n                                                    :src=\"demoValue.url\"\n                                                    alt=\"\"\n                                            >\n                                            <sw-alert\n                                                    v-else\n                                                    class=\"sw-cms-el-config-image__preview-info\"\n                                                    variant=\"info\"\n                                            >\n                                                {{ $tc('sw-cms.detail.label.mappingEmptyPreview') }}\n                                            </sw-alert>\n                                        </div>\n                                    </template>\n                                </sw-cms-mapping-field>\n\n                                <sw-upload-listener\n                                        :upload-tag=\"uploadTag(index)\"\n                                        auto-upload\n                                        @media-upload-finish=\"onImageUploadFinish($event, index)\">\n                                </sw-upload-listener>\n\n                                <sw-text-field\n                                        v-model:value=\"item.title.value\"\n                                        label=\"Title\"\n                                        placeholder=\"Title\"\n                                />\n\n                                <sw-text-field\n                                        v-model:value=\"item.text.value\"\n                                        label=\"Text\"\n                                        placeholder=\"Text\"\n                                />\n\n                                <mt-switch\n                                        v-model=\"item.activeBtn.value\"\n                                        :label=\"$tc('sw-cms.elements.custom-banner-slider.show-btn')\"\n                                />\n\n                                <sw-url-field\n                                        v-if=\"item.activeBtn.value\"\n                                        v-model:value=\"item.link.value\"\n                                        label=\"Link\"\n                                        placeholder=\"Link\"\n                                        @update:value=\"updateCurrentValue\"\n                                >\n                                </sw-url-field>\n\n                                <sw-text-field\n                                        v-if=\"item.activeBtn.value\"\n                                        v-model:value=\"item.nameBtn.value\"\n                                        label=\"Name Button\"\n                                        placeholder=\"Name Button\"\n                                />\n                            </template>\n\n                            <sw-button name=\"default-basic-plus-line\" color=\"#3498db\" @click=\"addNewElement\">+\n                            </sw-button>\n                        </sw-container>\n                    {% endblock %}\n\n                    {% block sw_cms_element_custom_banner_slider_config_settings %}\n                        <sw-container\n                                v-if=\"active === 'settings'\"\n                                class=\"sw-cms-el-config-custom-banner-slider__tab-settings\"\n                        >\n                            Just for example\n                        </sw-container>\n                    {% endblock %}\n\n\n                    <sw-media-modal-v2\n                            v-if=\"mediaModalIsOpen\"\n                            variant=\"full\"\n                            :caption=\"$tc('sw-cms.elements.general.config.caption.mediaUpload')\"\n                            :entity-context=\"cmsPageState.entityName\"\n                            :allow-multi-select=\"false\"\n                            :initial-folder-id=\"cmsPageState.defaultMediaFolderId\"\n                            @media-upload-remove-image=\"onImageRemove\"\n                            @media-modal-selection-change=\"onSelectionChanges\"\n                            @modal-close=\"onCloseModal\"\n                    />\n                </template>\n            </sw-tabs>\n        {% endblock %}\n    </div>\n{% endblock %}","import template from './sw-cms-el-config-custom-banner-slider.html.twig';\nimport './sw-cms-el-config-custom-banner-slider.scss';\n\nconst {Component, Mixin} = Shopware;\n\nComponent.register('sw-cms-el-config-custom-banner-slider', {\n    template,\n\n    inject: ['repositoryFactory','mediaService'],\n\n    mixins: [\n        Mixin.getByName('cms-element')\n    ],\n\n    data() {\n        return {\n            mediaModalIsOpen: false,\n            initialFolderId: null,\n            openedMediaModalIndex: null\n        };\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    computed: {\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n    },\n\n    methods: {\n        createdComponent() {\n            this.initElementConfig('custom-banner-slider');\n        },\n\n        uploadTag(index) {\n            return `cms-element-media-config-${this.element.id}-${index}`;\n        },\n\n        fileAccept() {\n            return \"image/*\";\n        },\n\n        addNewElement() {\n            this.element.config.slides.value.push(this.getEmptyElement())\n        },\n\n        removeElement(index) {\n            this.element.config.slides.value.splice(index, 1);\n        },\n\n        getEmptyElement() {\n            return {\n                image: {\n                    source: 'static',\n                    value: null,\n                    entity: {\n                        name: 'media'\n                    }\n                },\n                title: {\n                    source: 'static',\n                    value: ''\n                },\n                text: {\n                    source: 'static',\n                    value: ''\n                },\n                activeBtn: {\n                    source: 'static',\n                    value: false\n                },\n                link: {\n                    source: 'static',\n                    value: null\n                },\n                nameBtn: {\n                    source: 'static',\n                    value: ''\n                },\n            };\n        },\n\n        onImageRemove(index) {\n            this.element.config.slides.value[index].image.value = null;\n\n            this.$emit('element-update', this.element);\n        },\n\n\n        onSelectionChanges(mediaEntity) {\n            this.element.config.slides.value[this.openedMediaModalIndex].image.value = mediaEntity[0];\n\n            this.$emit('element-update', this.element);\n        },\n\n        onCloseModal() {\n            this.mediaModalIsOpen = false;\n            this.openedMediaModalIndex = null;\n        },\n\n        async onImageUploadFinish({ targetId }, index) {\n            const mediaEntity = await this.mediaRepository.get(targetId, Shopware.Context.api);\n\n            this.element.config.slides.value[index].image.value = mediaEntity;\n\n            this.$emit('element-update', this.element);\n        },\n\n        previewSource(index) {\n            if (null !== this.element.config.slides.value[index].image\n                && null !== this.element.config.slides.value[index].image.value) {\n                return this.element.config.slides.value[index].image.value.id;\n            }\n\n            return null;\n        },\n\n        onOpenMediaModal(index) {\n            this.mediaModalIsOpen = true;\n            this.openedMediaModalIndex = index;\n        }\n    },\n});","{% block sw_cms_element_custom_banner_slider_preview %}\n    <div class=\"sw-cms-el-preview-custom-banner-slider\">\n        custom-banner-slider\n    </div>\n{% endblock %}","import template from './sw-cms-el-preview-custom-banner-slider.html.twig';\nimport './sw-cms-el-preview-custom-banner-slider.scss';\n\nconst {Component} = Shopware;\n\nComponent.register('sw-cms-el-preview-custom-banner-slider', {\n    template\n});","import './component';\nimport './config';\nimport './preview';\n\nShopware.Service('cmsService').registerCmsElement({\n    name: 'custom-banner-slider',\n    label: 'sw-cms.elements.custom-banner-slider.label',\n    component: 'sw-cms-el-component-custom-banner-slider',\n    configComponent: 'sw-cms-el-config-custom-banner-slider',\n    previewComponent: 'sw-cms-el-preview-custom-banner-slider',\n    defaultConfig: {\n        slides: {\n            source: 'static',\n            value: []\n        }\n    },\n    defaultData: {}\n});","{% block sw_cms_block_custom_banner_slider %}\n    <div class=\"sw-cms-block-custom-banner-slider\">\n        <slot name=\"content\"></slot>\n    </div>\n{% endblock %}","import template from './sw-cms-block-custom-banner-slider.html.twig';\n\nconst {Component} = Shopware;\n\nComponent.register('sw-cms-block-custom-banner-slider', {\n    template\n});","{% block sw_cms_block_custom_banner_slider_preview %}\n    <div class=\"sw-cms-preview-custom-banner-slider\">\n        custom-banner-slider\n    </div>\n{% endblock %}","import template from './sw-cms-preview-custom-banner-slider.html.twig';\nimport './sw-cms-preview-custom-banner-slider.scss';\n\nconst {Component} = Shopware;\n\nComponent.register('sw-cms-preview-custom-banner-slider', {\n    template\n});","import './component';\nimport './preview';\n\nShopware.Service('cmsService').registerCmsBlock({\n    name: 'custom-banner-slider',\n    label: 'sw-cms.blocks.custom-banner-slider.label',\n    category: 'custom-option',\n    component: 'sw-cms-block-custom-banner-slider',\n    previewComponent: 'sw-cms-preview-custom-banner-slider',\n    defaultConfig: {\n        marginBottom: '20px',\n        marginTop: '20px',\n        marginLeft: '20px',\n        marginRight: '20px',\n        sizingMode: 'boxed'\n    },\n    slots: {\n        content: 'custom-banner-slider'\n    }\n});"],"file":"assets/swag-basic-example-theme-Bm2EPHdt.js"}